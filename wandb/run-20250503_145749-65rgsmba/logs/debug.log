2025-05-03 14:57:49,361 INFO    MainThread:36676 [wandb_setup.py:_flush():67] Current SDK version is 0.19.8
2025-05-03 14:57:49,361 INFO    MainThread:36676 [wandb_setup.py:_flush():67] Configure stats pid to 36676
2025-05-03 14:57:49,362 INFO    MainThread:36676 [wandb_setup.py:_flush():67] Loading settings from C:\Users\12400\.config\wandb\settings
2025-05-03 14:57:49,362 INFO    MainThread:36676 [wandb_setup.py:_flush():67] Loading settings from E:\TU Eindhoven\Team internship\Code\Documentation\wandb\settings
2025-05-03 14:57:49,362 INFO    MainThread:36676 [wandb_setup.py:_flush():67] Loading settings from environment variables
2025-05-03 14:57:49,362 INFO    MainThread:36676 [wandb_init.py:setup_run_log_directory():647] Logging user logs to E:\TU Eindhoven\Team internship\Code\Documentation\wandb\run-20250503_145749-65rgsmba\logs\debug.log
2025-05-03 14:57:49,364 INFO    MainThread:36676 [wandb_init.py:setup_run_log_directory():648] Logging internal logs to E:\TU Eindhoven\Team internship\Code\Documentation\wandb\run-20250503_145749-65rgsmba\logs\debug-internal.log
2025-05-03 14:57:49,368 INFO    MainThread:36676 [wandb_init.py:init():761] calling init triggers
2025-05-03 14:57:49,369 INFO    MainThread:36676 [wandb_init.py:init():766] wandb.init called with sweep_config: {}
config: {'policy_type': 'MlpPolicy', 'total_timesteps': 80000, 'lr': 0.001, 'entropy': 0.1, '_wandb': {}}
2025-05-03 14:57:49,369 INFO    MainThread:36676 [wandb_init.py:init():784] starting backend
2025-05-03 14:57:49,369 INFO    MainThread:36676 [wandb_init.py:init():788] sending inform_init request
2025-05-03 14:57:49,393 INFO    MainThread:36676 [backend.py:_multiprocessing_setup():101] multiprocessing start_methods=spawn, using: spawn
2025-05-03 14:57:49,393 INFO    MainThread:36676 [wandb_init.py:init():798] backend started and connected
2025-05-03 14:57:49,394 INFO    MainThread:36676 [wandb_init.py:init():891] updated telemetry
2025-05-03 14:57:49,397 INFO    MainThread:36676 [wandb_init.py:init():915] communicating run to backend with 90.0 second timeout
2025-05-03 14:57:49,885 INFO    MainThread:36676 [wandb_init.py:init():990] starting run threads in backend
2025-05-03 14:57:50,048 INFO    MainThread:36676 [wandb_run.py:_console_start():2375] atexit reg
2025-05-03 14:57:50,048 INFO    MainThread:36676 [wandb_run.py:_redirect():2227] redirect: wrap_raw
2025-05-03 14:57:50,048 INFO    MainThread:36676 [wandb_run.py:_redirect():2292] Wrapping output streams.
2025-05-03 14:57:50,048 INFO    MainThread:36676 [wandb_run.py:_redirect():2315] Redirects installed.
2025-05-03 14:57:50,054 INFO    MainThread:36676 [wandb_init.py:init():1032] run started, returning control to user process
2025-05-03 14:57:58,391 INFO    MainThread:36676 [wandb_run.py:_tensorboard_callback():1449] tensorboard callback: ./logs/SAC_2, True
2025-05-03 14:57:58,450 INFO    MainThread:36676 [wandb_watch.py:_watch():71] Watching
2025-05-03 14:57:58,453 INFO    MainThread:36676 [wandb_run.py:_config_callback():1261] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'stable_baselines3.sac.policies.SACPolicy'>", 'device': 'cuda', 'verbose': 1, 'policy_kwargs': "{'net_arch': [256, 256], 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 80000, '_num_timesteps_at_start': 0, 'seed': 'None', 'action_noise': 'None', 'start_time': 1746277078292359400, 'learning_rate': 0.0003, 'tensorboard_log': './logs/', '_last_obs': '[[ 0.14866933 -0.9020409   0.29171     0.70527     0.1279     -0.06268841\n  -0.51559216]]', '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', 'env': '<stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x0000029A01A16AD0>', '_vec_normalize_env': 'None', 'observation_space': 'Box(-1.0, 1.0, (7,), float32)', 'action_space': 'Box(-1.0, 1.0, (2,), float32)', 'n_envs': 1, 'buffer_size': 1000000, 'batch_size': 256, 'learning_starts': 100, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': 1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.ReplayBuffer object at 0x0000029A01A61C00>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.ReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -2.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function get_schedule_fn.<locals>.<lambda> at 0x0000029A0105E9E0>', 'policy': 'SACPolicy(\n  (actor): Actor(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (latent_pi): Sequential(\n      (0): Linear(in_features=7, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n    )\n    (mu): Linear(in_features=256, out_features=2, bias=True)\n    (log_std): Linear(in_features=256, out_features=2, bias=True)\n  )\n  (critic): ContinuousCritic(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=9, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=9, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n  )\n  (critic_target): ContinuousCritic(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=9, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=9, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n  )\n)', 'actor': 'Actor(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=7, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n  )\n  (mu): Linear(in_features=256, out_features=2, bias=True)\n  (log_std): Linear(in_features=256, out_features=2, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x0000029A10FE4BB0>'}
2025-05-03 15:27:27,455 INFO    MainThread:36676 [wandb_run.py:_finish():2112] finishing run gofun233-eindhoven-university-of-technology/Model Testing/65rgsmba
2025-05-03 15:27:27,456 INFO    MainThread:36676 [wandb_run.py:_atexit_cleanup():2340] got exitcode: 0
2025-05-03 15:27:27,457 INFO    MainThread:36676 [wandb_run.py:_restore():2322] restore
2025-05-03 15:27:27,458 INFO    MainThread:36676 [wandb_run.py:_restore():2328] restore done
2025-05-03 15:27:28,524 INFO    MainThread:36676 [wandb_run.py:_footer_history_summary_info():3956] rendering history
2025-05-03 15:27:28,526 INFO    MainThread:36676 [wandb_run.py:_footer_history_summary_info():3988] rendering summary
2025-05-03 15:27:28,527 INFO    MainThread:36676 [wandb_run.py:_footer_sync_info():3917] logging synced files
